version: '3.3'

volumes:
  mongo-volume:

networks:
  www:

services:
  app:
    working_dir: /app
    restart: unless-stopped
    user: ${CURRENT_USER_ID}:${CURRENT_USER_ID}
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      args:
        - CURRENT_USER_ID:${CURRENT_USER_ID}
    ports:
      - ${CLIENT_PORT}:${CLIENT_PORT}
      - ${API_PORT}:${API_PORT}
    volumes:
      - ./client:/app/client:rw
      - ./server:/app/server:rw
      - ./.env:/app/.env:ro
    command: >
      sh -c "cd ./client && npm run dev & cd ./server && npm run dev"
    networks:
      - www

  mongodb:
    image: mongo:latest
    container_name: event_app_db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME}
    volumes:
#      - ./server/scripts/mongo/init/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
#      - ./server/scripts/mongo/init:/home/mongodb
      - mongo-volume:/data/db
    ports:
      - ${MONGO_DB_PORT}:27017
    networks:
      - www

  mongo-express:
    image: mongo-express:1.0.0-20
    container_name: mongo_express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb:27017/
    networks:
    - www